
//  ContentView.swift
//  ViraGreen
//
//  Created by Taqi Hussain on 1/15/25.
//


import SwiftUI

struct ContentView: View {
    // UI Elements
    @State private var activity: String = "Driving"
    @State private var distance: String = "10"
    @State private var emissionsText: String = "Total CO2 Emissions: 0 kg"
    @State private var co2Emissions: Double = 0.0
    @State private var showTips = false
    @State private var emissionsLog: [String] = []
    
    // Emission factors (in kg CO2 per activity)
    let emissionFactors: [String: Double] = [
        "Driving": 0.404, // kg CO2 per mile
        "Flying": 0.257, // kg CO2 per mile
        "Biking": 0.0,    // kg CO2 per mile
        "Walking": 0.0    // kg CO2 per mile
    ]
    
    let activities = ["Driving", "Flying", "Biking", "Walking"]
    var body: some View {
        VStack {
            Picker("Select activity", selection: $activity) {
                ForEach(activities, id: \.self) { activity in
                    Text(activity).tag(activity)
                }
            }
            .pickerStyle(SegmentedPickerStyle())
            .padding()
            
            TextField("Enter distance (miles)", text: $distance)
                .textFieldStyle(RoundedBorderTextFieldStyle())
                .padding()
                .keyboardType(.decimalPad)
            
            Button(action: calculateEmissions) {
                Text("Calculate Emissions")
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(5)
            }
            
            Text(emissionsText)
                .padding()
            
            Text("CO2 Emissions: \(co2Emissions, specifier: "%.2f") kg")
                .font(.largeTitle)
                .padding()
            
            Button(action: {
                showTips.toggle()
            }) {
                Text("How to Spend Less Emissions")
                    .font(.headline)
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
            }
            .alert(isPresented: $showTips) {
                Alert(title: Text("Tips to Reduce CO2 Emissions"),
                      message: Text(generateTips()),
                      dismissButton: .default(Text("Got it!")))
            }
            
            List(emissionsLog, id: \.self) { log in
                Text(log)
            }
        }
        .padding()
    }
    
    func calculateEmissions() {
        guard let emissionFactor = emissionFactors[activity],
              let distanceValue = Double(distance) else {
            emissionsText = "Invalid input. Please try again."
            return
        }
        
        let totalEmissions = emissionFactor * distanceValue
        
        emissionsText = String(format: "Total CO2 Emissions: %.2f kg", totalEmissions)
        co2Emissions = totalEmissions // Update co2Emissions for display
        emissionsLog.append("\(activity) for \(distanceValue) miles: \(totalEmissions) kg CO2")
    }
    
    func generateTips() -> String {
        switch activity {
        case "Driving":
            return "1. Carpool with others.\n2. Maintain your vehicle for better fuel efficiency."
        case "Flying":
            return "1. Consider direct flights.\n2. Use alternative transport for short distances."
        case "Biking":
            return "1. Use biking for short trips.\n2. Encourage others to bike."
        case "Walking":
            return "1. Walk for errands instead of driving.\n2. Promote walking in your community."
        default:
            return "No tips available."
        }
    }
}


@main
struct MyApp: App {
    var body: some Scene {
        WindowGroup {
            ContentView()
        }
    }
}
